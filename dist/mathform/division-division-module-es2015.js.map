{"version":3,"sources":["./src/app/division/division-learn/division-learn.component.html","./src/app/division/division-learn/division-learn.component.css","./src/app/division/division-learn/division-learn.component.ts","./src/app/division/division-routing.module.ts","./src/app/division/division.module.ts","./src/app/division/math-division-validator.ts"],"names":[],"mappings":"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","file":"division-division-module-es2015.js","sourcesContent":["export default \"<h4>Division</h4>\\r\\n<h5>Time:</h5>\\r\\n<input [(ngModel)]=\\\"time\\\"/>\\r\\n<h5>Choose level:</h5>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"5\\\"\\r\\n    id=\\\"exampleRadios1\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios1\\\">\\r\\n    5 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"6\\\"\\r\\n    id=\\\"exampleRadios2\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios2\\\">\\r\\n    6 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"7\\\"\\r\\n    id=\\\"exampleRadios3\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios3\\\">\\r\\n    7 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"8\\\"\\r\\n    id=\\\"exampleRadios4\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios4\\\">\\r\\n    8 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"9\\\"\\r\\n    id=\\\"exampleRadios5\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios5\\\">\\r\\n    9 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"10\\\"\\r\\n    id=\\\"exampleRadios6\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios6\\\">\\r\\n    10 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"15\\\"\\r\\n    id=\\\"exampleRadios7\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios7\\\">\\r\\n    15 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"20\\\"\\r\\n    id=\\\"exampleRadios8\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios8\\\">\\r\\n    20 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"30\\\"\\r\\n    id=\\\"exampleRadios9\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios9\\\">\\r\\n    30 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"50\\\"\\r\\n    id=\\\"exampleRadios10\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios10\\\">\\r\\n    50 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"100\\\"\\r\\n    id=\\\"exampleRadios11\\\" checked>\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios11\\\">\\r\\n    100 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"200\\\"\\r\\n    id=\\\"exampleRadios12\\\">\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios12\\\">\\r\\n    200 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<div class=\\\"form-check disabled\\\">\\r\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"500\\\"\\r\\n    id=\\\"exampleRadios13\\\">\\r\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios13\\\">\\r\\n    500 numbers\\r\\n  </label>\\r\\n</div>\\r\\n<button type=\\\"button\\\" name=\\\"btnStart\\\" (click)=\\\"start()\\\" class=\\\"btn btn-primary\\\"\\r\\n  [disabled]=\\\"isGameStarted\\\">Start</button>\\r\\n\\r\\n<div>Number of tries: {{numberSolved}}</div>\\r\\n<div *ngIf=\\\"numberSolved > 0\\\">\\r\\n  Your result is: {{ secondsPerSolution | number: '1.1-2' }}\\r\\n</div>\\r\\n\\r\\n<div class=\\\"stats\\\">\\r\\n  <p>{{timeLeft}} Seconds Left....</p>\\r\\n</div>\\r\\n<form [formGroup]=\\\"mathForm\\\">\\r\\n  <div class=\\\"equation\\\">{{ firstNumber }} / {{ secondNumber }} =</div>\\r\\n  <input appAnswer formControlName=\\\"answer\\\" class=\\\"input-result\\\" disabled />\\r\\n</form>\\r\\n<div class=\\\"stats\\\">\\r\\n  Average time: {{ secondsPerSolution | number: '1.1-2' }}\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpdmlzaW9uL2RpdmlzaW9uLWxlYXJuL2RpdmlzaW9uLWxlYXJuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { delay, filter, scan } from 'rxjs/operators';\nimport { MathDivisionValidator } from '../math-division-validator';\n\n@Component({\n  selector: 'app-division-learn',\n  templateUrl: './division-learn.component.html',\n  styleUrls: ['./division-learn.component.css']\n})\nexport class DivisionLearnComponent implements OnInit {\n  private subscriptions: Subscription;\n  private randomNumber = 10;\n  private timeLeft: number;\n\n  mathForm = new FormGroup(\n    {\n      firstNumber: new FormControl(0),\n      secondNumber: new FormControl(0),\n      answer: new FormControl('')\n    },\n    [MathDivisionValidator.validate('answer', 'firstNumber', 'secondNumber')]\n  );\n  model = { options: this.randomNumber };\n  isGameStarted = false;\n  time = 60;\n  secondsPerSolution = 0;\n  numberSolved = 0;\n  interval;\n\n  constructor() {\n    this.subscriptions = new Subscription();\n  }\n\n  get firstNumber() {\n    return this.mathForm.value.firstNumber;\n  }\n\n  get secondNumber() {\n    return this.mathForm.value.secondNumber;\n  }\n\n  ngOnInit() {\n  }\n\n  calculateRandomNumber() {\n    return Math.floor(Math.random() * this.randomNumber);\n  }\n\n  start() {\n    this.timeLeft = this.time;\n    this.subscriptions.add(this.trackChanges());\n    this.numberSolved = 0;\n    this.secondsPerSolution = 0;\n    this.randomNumber = this.model.options;\n    this.setValues();\n    this.mathForm.controls.answer.enable();\n    this.isGameStarted = true;\n    this.startTimer();\n  }\n\n  stop() {\n    this.mathForm.setValue({\n      firstNumber: 0,\n      secondNumber: 0,\n      answer: ''\n    });\n\n    this.isGameStarted = false;\n    this.mathForm.controls.answer.disable();\n  }\n\n  trackChanges() {\n    this.mathForm.statusChanges\n      .pipe(\n        filter(value => value === 'VALID'),\n        delay(100),\n        scan(\n          acc => {\n            return {\n              numberSolved: acc.numberSolved + 1,\n              startTime: acc.startTime\n            };\n          },\n          { numberSolved: 0, startTime: new Date().getTime() }\n        )\n      )\n      .subscribe(({ numberSolved, startTime }) => {\n        this.secondsPerSolution = (new Date().getTime() - startTime) / numberSolved / 1000;\n        this.numberSolved = numberSolved;\n        this.setValues();\n        this.increaseNumberOfTries();\n      });\n  }\n\n  setValues() {    \n    let firstNumber = this.calculateRandomNumber();\n    let secondNumber = this.calculateRandomNumber();\n\n    var result = firstNumber * secondNumber;\n\n    this.mathForm.setValue({\n      firstNumber: result,\n      secondNumber: secondNumber,\n      answer: ''\n    });\n  }\n\n  increaseNumberOfTries() {\n    this.numberSolved = this.numberSolved++;\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.pauseTimer();\n        this.stop();\n      }\n    }, 1000)\n  }\n\n  pauseTimer() {\n    clearInterval(this.interval);\n  }\n\n  ngDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DivisionLearnComponent } from './division-learn/division-learn.component';\n\nconst routes: Routes = [{ path: '', component: DivisionLearnComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DivisionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DivisionRoutingModule } from './division-routing.module';\nimport { DivisionLearnComponent } from './division-learn/division-learn.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [DivisionLearnComponent],\n  imports: [\n    CommonModule,\n    DivisionRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class DivisionModule { }\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class MathDivisionValidator {\r\n    static validate(target: string, sourceOne: string, sourceTwo: string) {\r\n        return (form: AbstractControl) => {\r\n            const sum = form.value[target];\r\n            const firstNumber = form.value[sourceOne];\r\n            const secondNumber = form.value[sourceTwo];\r\n\r\n            if (firstNumber / secondNumber === parseInt(sum)) {\r\n                return null;\r\n            }\r\n\r\n            return { result: true };\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}