{"version":3,"sources":["src/app/substraction/substraction-learn/substraction-learn.component.html","src/app/substraction/math-substraction-validator.ts","src/app/substraction/substraction-learn/substraction-learn.component.css","src/app/substraction/substraction-learn/substraction-learn.component.ts","src/app/substraction/substraction-routing.module.ts","src/app/substraction/substraction.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h4>Substraction</h4>\\n<h5>Time:</h5>\\n<input [(ngModel)]=\\\"time\\\"/>\\n<h5>Choose level (draw set of numbers):</h5>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"5\\\"\\n    id=\\\"exampleRadios1\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios1\\\">\\n    5 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"6\\\"\\n    id=\\\"exampleRadios2\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios2\\\">\\n    6 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"7\\\"\\n    id=\\\"exampleRadios3\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios3\\\">\\n    7 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"8\\\"\\n    id=\\\"exampleRadios4\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios4\\\">\\n    8 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"9\\\"\\n    id=\\\"exampleRadios5\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios5\\\">\\n    9 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"10\\\"\\n    id=\\\"exampleRadios6\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios6\\\">\\n    10 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"15\\\"\\n    id=\\\"exampleRadios7\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios7\\\">\\n    15 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"20\\\"\\n    id=\\\"exampleRadios8\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios8\\\">\\n    20 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"30\\\"\\n    id=\\\"exampleRadios9\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios9\\\">\\n    30 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"50\\\"\\n    id=\\\"exampleRadios10\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios10\\\">\\n    50 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"100\\\"\\n    id=\\\"exampleRadios11\\\" checked>\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios11\\\">\\n    100 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"200\\\"\\n    id=\\\"exampleRadios12\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios12\\\">\\n    200 numbers\\n  </label>\\n</div>\\n<div class=\\\"form-check disabled\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.options\\\" name=\\\"exampleRadios\\\" [value]=\\\"500\\\"\\n    id=\\\"exampleRadios13\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"exampleRadios13\\\">\\n    500 numbers\\n  </label>\\n</div>\\n<button type=\\\"button\\\" name=\\\"btnStart\\\" (click)=\\\"start()\\\" class=\\\"btn btn-primary\\\"\\n  [disabled]=\\\"isGameStarted\\\">Start</button>\\n\\n<div>Number of tries: {{numberSolved}}</div>\\n<div *ngIf=\\\"numberSolved > 0\\\">\\n  Your result is: {{ secondsPerSolution | number: '1.1-2' }}\\n</div>\\n\\n<div class=\\\"stats\\\">\\n  <p>{{timeLeft}} Seconds Left....</p>\\n</div>\\n<form [formGroup]=\\\"mathForm\\\">\\n  <div class=\\\"equation\\\">{{ firstNumber }} - {{ secondNumber }} =</div>\\n  <input appAnswer formControlName=\\\"answer\\\" class=\\\"input-result\\\" disabled />\\n</form>\\n<div class=\\\"stats\\\">\\n  Average time: {{ secondsPerSolution | number: '1.1-2' }}\\n</div>\"","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class MathSubstractionValidator {\r\n    static validate(target: string, sourceOne: string, sourceTwo: string) {\r\n        return (form: AbstractControl) => {\r\n            const sum = form.value[target];\r\n            let firstNumber = form.value[sourceOne];\r\n            let secondNumber = form.value[sourceTwo];\r\n\r\n            if (firstNumber - secondNumber === parseInt(sum)) {\r\n                return null;\r\n            }\r\n\r\n            return { result: true };\r\n        };\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnN0cmFjdGlvbi9zdWJzdHJhY3Rpb24tbGVhcm4vc3Vic3RyYWN0aW9uLWxlYXJuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { delay, filter, scan } from 'rxjs/operators';\nimport { MathSubstractionValidator } from '../math-substraction-validator';\n\n@Component({\n  selector: 'app-substraction-learn',\n  templateUrl: './substraction-learn.component.html',\n  styleUrls: ['./substraction-learn.component.css']\n})\nexport class SubstractionLearnComponent implements OnInit {\n  private subscriptions: Subscription;\n  private randomNumber = 10;\n  private timeLeft: number;\n\n  mathForm = new FormGroup(\n    {\n      firstNumber: new FormControl(0),\n      secondNumber: new FormControl(0),\n      answer: new FormControl('')\n    },\n    [MathSubstractionValidator.validate('answer', 'firstNumber', 'secondNumber')]\n  );\n  model = { options: this.randomNumber };\n  isGameStarted = false;\n  time = 60;\n  secondsPerSolution = 0;\n  numberSolved = 0;\n  interval;\n\n  constructor() {\n    this.subscriptions = new Subscription();\n  }\n\n  get firstNumber() {\n    return this.mathForm.value.firstNumber;\n  }\n\n  get secondNumber() {\n    return this.mathForm.value.secondNumber;\n  }\n\n  ngOnInit() {\n  }\n\n  calculateRandomNumber() {\n    return Math.floor(Math.random() * this.randomNumber);\n  }\n\n  start() {\n    this.timeLeft = this.time;\n    this.subscriptions.add(this.trackChanges());\n    this.numberSolved = 0;\n    this.secondsPerSolution = 0;\n    this.randomNumber = this.model.options;\n    this.setValues();\n    this.mathForm.controls.answer.enable();\n    this.isGameStarted = true;\n    this.startTimer();\n  }\n\n  stop() {\n    this.mathForm.setValue({\n      firstNumber: 0,\n      secondNumber: 0,\n      answer: ''\n    });\n\n    this.isGameStarted = false;\n    this.mathForm.controls.answer.disable();\n  }\n\n  trackChanges() {\n    this.mathForm.statusChanges\n      .pipe(\n        filter(value => value === 'VALID'),\n        delay(100),\n        scan(\n          acc => {\n            return {\n              numberSolved: acc.numberSolved + 1,\n              startTime: acc.startTime\n            };\n          },\n          { numberSolved: 0, startTime: new Date().getTime() }\n        )\n      )\n      .subscribe(({ numberSolved, startTime }) => {\n        this.secondsPerSolution = (new Date().getTime() - startTime) / numberSolved / 1000;\n        this.numberSolved = numberSolved;\n        this.setValues();\n        this.increaseNumberOfTries();\n      });\n  }\n\n  setValues() {\n    let firstNumber = this.calculateRandomNumber();\n    let secondNumber = this.calculateRandomNumber();\n\n    if (firstNumber < secondNumber) {\n      const temp = firstNumber;\n      firstNumber = secondNumber;\n      secondNumber = temp;\n    }\n\n    this.mathForm.setValue({\n      firstNumber: firstNumber,\n      secondNumber: secondNumber,\n      answer: ''\n    });\n  }\n\n  increaseNumberOfTries() {\n    this.numberSolved = this.numberSolved++;\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.pauseTimer();\n        this.stop();\n      }\n    }, 1000)\n  }\n\n  pauseTimer() {\n    clearInterval(this.interval);\n  }\n\n  ngDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SubstractionLearnComponent } from './substraction-learn/substraction-learn.component';\n\n\nconst routes: Routes = [{ path: '', component: SubstractionLearnComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubstractionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SubstractionRoutingModule } from './substraction-routing.module';\nimport { SubstractionLearnComponent } from './substraction-learn/substraction-learn.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [SubstractionLearnComponent],\n  imports: [\n    CommonModule,\n    SubstractionRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class SubstractionModule { }\n"],"sourceRoot":"webpack:///"}